struct Node
{
   char value;
   int left = -1;
   int right = -1;
};
void Tree(Node arr[], int idx)
{
   
   if (arr[idx].left > 0)
   {
      //printf("%c", arr[idx].value);
      //return;
      Tree(arr, arr[idx].left);
   }
   
   printf("%c", arr[idx].value);

   if (arr[idx].right > 0)
   {
      //return;
      Tree(arr, arr[idx].right);
   }
   
}

int main()
{
   int t = 0;
   Node arr[100];
   while (t++ < 10)
   {
      int size = 0;
      scanf("%d", &size);
      for (int i = 0; i < size / 2; i++)
      {
         arr[i].left = -1;
         arr[i].right = -1;
         int n, l, r;
         char v;
         scanf("%d %c", &n, &v);
         arr[i].value = v;
         if (i + 1 == size / 2)
         {
            scanf("%d", &l);
            arr[i].left = l - 1;
            if (size % 2 == 1)
            {
               scanf("%d", &r);
               arr[i].right = r - 1;
            }
         }
         else
         {
            scanf("%d %d ", &l, &r);
            arr[i].left = l - 1;
            arr[i].right = r - 1;
         }
      }
      for (int i = size / 2; i < size; i++)
      {
         arr[i].left = -1;
         arr[i].right = -1;

         int n;
         char v;
         scanf("%d %c", &n, &v);
         arr[i].value = v;
      }
      printf("#%d ", t);
      Tree(arr, 0);
      printf("\n");
   }
   return 0;
}